legend("topright",c("men","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.1,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",xlab="",ylab="")
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.1,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",xlab="",ylab="",las=1)
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.1,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",
xlab="",ylab="") # remove x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.15,.95,.1,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income",ylab="") # x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.15,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income",ylab="") # x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income",ylab="") # x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income (in CHF)",ylab="") # x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg/dataset.m$p19w610
w.w <- dataset.w$i19ptotg/dataset.w$p19w610
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,main="",
xlab="Yearly gross income (in CHF)",ylab="") # x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg/dataset.m$p19w610
w.w <- dataset.w$i19ptotg/dataset.w$p19w610
w.m
dataset.m$p19w610
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
w.m <- dataset.m$i19ptotg
w.w <- dataset.w$i19ptotg
w.m <- w.m[w.m>=0] # remove irrelevant data
w.w <- w.w[w.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(w.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income (in CHF)",ylab="") # x and y labels
lines(logdensity(w.m),col="red",lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
income.m <- dataset.m$i19ptotg
income.w <- dataset.w$i19ptotg
income.m <- income.m[income.m>=0] # remove irrelevant data
income.w <- income.w[income.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(income.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income (in CHF)",ylab="") # x and y labels
lines(logdensity(income.m),col="red",lwd=2)
abline(v=mean(income.m),col="red",lty=3,lwd=2)
abline(v=mean(income.w),col="black",lty=3,lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC,logKDE)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
income.m <- dataset.m$i19ptotg
income.w <- dataset.w$i19ptotg
income.m <- income.m[income.m>=0] # remove irrelevant data
income.w <- income.w[income.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(income.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income (in CHF)",ylab="") # x and y labels
lines(logdensity(income.m),col="red",lwd=2)
abline(v=mean(income.m),col="red",lty=3,lwd=2)
abline(v=mean(income.w),col="black",lty=3,lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
library(AEC);library(logKDE)
dataset.m <- subset(shp,(sex19==1)&(age19<=35))
dataset.w <- subset(shp,(sex19==2)&(age19<=35))
income.m <- dataset.m$i19ptotg
income.w <- dataset.w$i19ptotg
income.m <- income.m[income.m>=0] # remove irrelevant data
income.w <- income.w[income.w>=0] # remove irrelevant data
par(plt=c(.1,.95,.2,.95)) # adjust margins
plot(logdensity(income.w),lwd=2,xlim=c(0,200000),main="",
xlab="Yearly gross income (in CHF)",ylab="") # x and y labels
lines(logdensity(income.m),col="red",lwd=2)
abline(v=mean(income.m),col="red",lty=3,lwd=2)
abline(v=mean(income.w),col="black",lty=3,lwd=2)
legend("topright",c("men yearly income","women"),lty=1,lwd=2,col=c("red","black"))
m.bar <- mean(income.m)
w.bar <- mean(income.w)
sigma <- sqrt(var(income.m)/length(income.m) + var(income.w)/length(income.w))
pnorm(.99)
qnorm(.99)
qnorm(.995)
m.bar <- mean(income.m)
w.bar <- mean(income.w)
sigma <- sqrt(var(income.m)/length(income.m) + var(income.w)/length(income.w))
c(m.bar,w.bar,sigma)
?format
all.n <- c(5,10,20,100)
nb.sim <- 10000
x <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2))
par(plt=c(.1,.95,.15,.8))
all.res <- matrix(NaN,nb.sim,length(all.n))
for(i in 1:length(all.n)){
n <- all.n[i]
main.t <- paste("n=",toString(n),sep="")
x.aux <- x[,1:n]
all.res[,i] <- JB(x.aux)
hist(all.res[,i],nclass = 100,freq = FALSE,main=main.t,xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
f <- function(x,df){
return(dt(x = x,df))
}
min.x <- -4
max.x <- 4
x <- seq(min.x,max.x,by=.01)
df <- 5
f.x <- f(x,df)
max.f <- max(f.x)
par(plt=c(.15,.95,.2,.95))
plot(x,f.x,type="l",lwd=2,ylim=c(0,1.5*max.f),xlab="Test statistic S",
ylab="Density of test statistic under Ho")
abline(h=0)
alpha <- .05
threshold <- qt(p = alpha/2,df)
arrows(x0 = threshold,y0 = .6*max.f,
x1 = threshold,y1 = 0,
angle = 10,lwd = 1,col="black",length = .1,lty=1)
text(x = threshold,y=.63*max.f,expression({Phi[S]^{-1}}(alpha/2)))
arrows(x0 = -threshold,y0 = .6*max.f,
x1 = -threshold,y1 = 0,
angle = 10,lwd = 1,col="black",length = .1,lty=1)
text(x = -threshold,y=.63*max.f,expression({Phi[S]^{-1}}(1-alpha/2)))
text(x = min.x + .25*(max.x-min.x),y=1.45*max.f,
expression(paste(alpha," is the level (or size) of the test.",sep=""))
)
x.critic <- seq(min.x,threshold,by=.01)
n <- length(x.critic)
polygon(c(x.critic,x.critic[n:1]),c(f(x.critic,df),0*x.critic),col = "grey")
x.critic <- seq(-threshold,max.x,by=.01)
polygon(c(x.critic,x.critic[n:1]),c(f(x.critic,df),0*x.critic),col = "grey")
arrows(x0 = (min.x + .48*(max.x-min.x)),y0 = 1.2*max.f,
x1 = (min.x + .1*(max.x-min.x)),y1 = .02*max.f,angle = 10,lwd = 2,col="red",length = .15)
arrows(x0 = (min.x + .52*(max.x-min.x)),y0 = 1.2*max.f,
x1 = (min.x + .9*(max.x-min.x)),y1 = .02*max.f,angle = 10,lwd = 2,col="red",length = .15)
text(x = min.x + .5*(max.x-min.x),y=1.24*max.f,labels =
expression(paste("Critical region (sum of areas = ",alpha,")",sep="")),
col="red")
f <- function(x,df){
return(dt(x = x,df))
}
min.x <- -4
max.x <- 4
x <- seq(min.x,max.x,by=.01)
df <- 5
f.x <- f(x,df)
max.f <- max(f.x)
par(plt=c(.15,.95,.2,.95))
plot(x,f.x,type="l",lwd=2,ylim=c(0,1.5*max.f),xlab="Test statistic S",
ylab="Density of test statistic under Ho")
abline(h=0)
alpha <- .05
threshold <- qt(p = alpha/2,df)
arrows(x0 = threshold,y0 = .6*max.f,
x1 = threshold,y1 = 0,
angle = 10,lwd = 1,col="black",length = .1,lty=1)
text(x = threshold,y=.63*max.f,expression({Phi[S]^{-1}}(alpha/2)))
arrows(x0 = -threshold,y0 = .6*max.f,
x1 = -threshold,y1 = 0,
angle = 10,lwd = 1,col="black",length = .1,lty=1)
text(x = -threshold,y=.63*max.f,expression({Phi[S]^{-1}}(1-alpha/2)))
text(x = min.x + .25*(max.x-min.x),y=1.45*max.f,
expression(paste(alpha," is the level (or size) of the test.",sep=""))
)
x.value <- threshold + .6
arrows(x0 = x.value,y0 = .9*max.f,
x1 = x.value,y1 = 0,
angle = 10,length = .1,lty=1,col="blue",lwd=2)
text(x = threshold,y=.93*max.f,"(Sample-based) Test statistics X",col="blue")
threshold <- x.value
x.critic <- seq(min.x,threshold,by=.01)
n <- length(x.critic)
polygon(c(x.critic,x.critic[n:1]),c(f(x.critic,df),0*x.critic),col = "#00006055")
x.critic <- seq(-threshold,max.x,by=.01)
polygon(c(x.critic,x.critic[n:1]),c(f(x.critic,df),0*x.critic),col = "#00006055")
arrows(x0 = (min.x + .48*(max.x-min.x)),y0 = 1.2*max.f,
x1 = (min.x + .2*(max.x-min.x)),y1 = .04*max.f,angle = 10,lwd = 1,col="blue",length = .15)
arrows(x0 = (min.x + .52*(max.x-min.x)),y0 = 1.2*max.f,
x1 = (min.x + .8*(max.x-min.x)),y1 = .04*max.f,angle = 10,lwd = 1,col="blue",length = .15)
text(x = min.x + .5*(max.x-min.x),y=1.24*max.f,labels = "Sum of areas = p-value",
col="blue")
text(x = min.x + .8*(max.x-min.x),y=1.45*max.f,
labels = expression(paste("p-value > ",alpha,", which implies",sep="")),
col="red")
text(x = min.x + .8*(max.x-min.x),y=1.35*max.f,
labels = "that we cannot reject Ho",
col="red")
f <- function(x,df){
return(dchisq(x = x,df))
}
min.x <- 0
max.x <- 15
x <- seq(min.x,max.x,by=.01)
df <- 5
f.x <- f(x,df)
max.f <- max(f.x)
par(plt=c(.15,.95,.2,.95))
plot(x,f.x,type="l",lwd=2,ylim=c(0,1.5*max.f),xlab="Test statistic X",
ylab="Density of test statistic under Ho")
abline(h=0)
alpha <- .05
threshold <- qchisq(p = 1-alpha,df)
#lines(c(threshold,threshold),c(0,f(threshold,df)),col="blue",lwd=2)
arrows(x0 = threshold,y0 = .6*max.f,
x1 = threshold,y1 = 0,
angle = 10,lwd = 1,col="black",length = .1,lty=1)
text(x = threshold,y=.63*max.f,expression({Phi[X]^{-1}}(1-alpha)))
text(x = min.x + .25*(max.x-min.x),y=1.45*max.f,
expression(paste(alpha," is the level (or size) of the test.",sep="")))
x.critic <- seq(threshold,max.x,by=.01)
n <- length(x.critic)
polygon(c(x.critic,x.critic[n:1]),c(f(x.critic,df),0*x.critic),col = "grey")
arrows(x0 = (min.x + .82*(max.x-min.x)),y0 = 1.2*max.f,
x1 = (min.x + .9*(max.x-min.x)),y1 = .02*max.f,angle = 10,lwd = 2,col="red",length = .15)
text(x = min.x + .8*(max.x-min.x),y=1.24*max.f,labels =
expression(paste("Critical region (area = ",alpha,")",sep="")),
col="red")
f <- function(x,df){
return(dchisq(x = x,df))
}
min.x <- 0
max.x <- 15
x <- seq(min.x,max.x,by=.01)
df <- 5
f.x <- f(x,df)
max.f <- max(f.x)
par(plt=c(.15,.95,.2,.95))
plot(x,f.x,type="l",lwd=2,ylim=c(0,1.5*max.f),xlab="Test statistic X",
ylab="Density of test statistic under Ho")
abline(h=0)
alpha <- .05
threshold <- qchisq(p = 1-alpha,df)
#lines(c(threshold,threshold),c(0,f(threshold,df)),col="blue",lwd=2)
arrows(x0 = threshold,y0 = .6*max.f,
x1 = threshold,y1 = 0,
angle = 10,lwd = 1,col="black",length = .1,lty=1)
text(x = threshold,y=.63*max.f,expression({Phi[X]^{-1}}(1-alpha)))
text(x = min.x + .25*(max.x-min.x),y=1.45*max.f,
expression(paste(alpha," is the level (or size) of the test.",sep="")))
x.value <- threshold - 2
arrows(x0 = x.value,y0 = .9*max.f,
x1 = x.value,y1 = 0,
angle = 10,length = .1,lty=1,col="blue",lwd=2)
text(x = threshold,y=.93*max.f,"(Sample-based) Test statistics X",col="blue")
threshold <- x.value
#lines(c(threshold,threshold),c(0,f(threshold,df)),col="blue",lwd=2)
x.critic <- seq(threshold,max.x,by=.01)
n <- length(x.critic)
polygon(c(x.critic,x.critic[n:1]),c(f(x.critic,df),0*x.critic),col = "#00006055")
arrows(x0 = (min.x + .5*(max.x-min.x)),y0 = 1.2*max.f,
x1 = (min.x + .65*(max.x-min.x)),y1 = .04*max.f,angle = 10,lwd = 1,col="blue",length = .15)
text(x = min.x + .5*(max.x-min.x),y=1.24*max.f,labels = "Area = p-value",
col="blue")
text(x = min.x + .8*(max.x-min.x),y=1.45*max.f,
labels = expression(paste("p-value > ",alpha,", which implies",sep="")),
col="red")
text(x = min.x + .8*(max.x-min.x),y=1.35*max.f,
labels = "that we cannot reject Ho",
col="red")
size <- function(theta,N,critical){
aux <- rep(theta,N+1)^(0:N) * rep(1-theta,N+1)^(seq(N,0,by=-1)) * choose(N,0:N)
return(sum(aux[(0:N)>(critical*N)]))
}
all.N <- c(100,500)
par(mfrow=c(length(all.N),1))
par(plt=c(0.15,0.95,0.25,0.8))
for(N in all.N){
theta <- .01
critical <- .1
theta.vector <- seq(0,.5,by=.0025)
size.vector.1 <- NULL
size.vector.2 <- NULL
critical.vector <- c(.05,.1,.2)
all.sizes <- matrix(NaN,length(theta.vector),length(critical.vector))
i <- 0
for(theta in theta.vector){
i <- i + 1
j <- 0
for(critical in critical.vector){
j <- j + 1
all.sizes[i,j] <- size(theta,N,critical)
}
}
position.arrow.size <- .08
position.arrow.power <- .12
x.arrow.size <- which(theta.vector==position.arrow.size)
x.arrow.power <- which(theta.vector==position.arrow.power)
if(N==100){
main.t = expression(paste("Probability to reject ",H[0],", N=100",sep=""))
}else{
main.t = expression(paste("Probability to reject ",H[0],", N=500",sep=""))
}
plot(0,0,type='l',
xlab=expression(paste("\"true\" ",theta,sep="")),
ylab="Probability",
main=main.t,
xlim=c(0,.4),ylim=c(0,1))
polygon(c(-1,.1,.1,-1),c(-1,-1,2,2),
col="#9999EE66", border = rgb(0.4,0.4,0.4))
lines(theta.vector,all.sizes[,1],col='black',lwd=3)
lines(theta.vector,all.sizes[,2],col='red',lwd=3)
lines(theta.vector,all.sizes[,3],col='blue',lwd=3)
abline(v=.1)
arrows(position.arrow.size,0,position.arrow.size,all.sizes[x.arrow.size,2],length=.1,
angle=20,lwd=2,col="red",code=3)
lines(c(position.arrow.size,.25),c(all.sizes[x.arrow.size,2]/2,.35),col='red')
text(.255,.35,"Size",pos=4,col='red')
arrows(position.arrow.power,0,position.arrow.power,all.sizes[x.arrow.power,2],length=.1,
angle=20,lwd=2,col="red",code=3)
lines(c(position.arrow.power,.25),c(all.sizes[x.arrow.power,2]/2,.5),col='red')
text(.255,.55,"Power",pos=4,col='red')
legend("bottomright",
c("b = 0.05","b = 0.10","b = 0.20"),
lty=c(1,1,1), # gives the legend appropriate symbols (lines)
lwd=c(3,3,3), # line width
col=c("black","red","blue"), # gives the legend lines the correct color and width
#text.width = 2,
cex=1,# size of the text
pch = c(NaN,NaN,NaN)#symbols
)
text(.03,.8,"We would like")
text(.03,.7,"to accept Ho")
text(.35,.8,"We would like")
text(.35,.7,"to reject Ho")
}
JB <- function(x){
x.1 <- dim(x)[1]
x.2 <- dim(x)[2]
n <- x.2
x.bar <- apply(x,1,mean)
x.x.bar <- x - matrix(x.bar,x.1,x.2)
m.2 <- apply(x.x.bar,1,function(x){mean(x^2)})
m.3 <- apply(x.x.bar,1,function(x){mean(x^3)})
m.4 <- apply(x.x.bar,1,function(x){mean(x^4)})
g.3 <- m.3/m.2^(3/2)
g.4 <- m.4/m.2^(4/2)
return(n*(g.3^2/6 + (g.4-3)^2/24))
}
JB <- function(x){
x.1 <- dim(x)[1]
x.2 <- dim(x)[2]
n <- x.2
x.bar <- apply(x,1,mean)
x.x.bar <- x - matrix(x.bar,x.1,x.2)
m.2 <- apply(x.x.bar,1,function(x){mean(x^2)})
m.3 <- apply(x.x.bar,1,function(x){mean(x^3)})
m.4 <- apply(x.x.bar,1,function(x){mean(x^4)})
g.3 <- m.3/m.2^(3/2)
g.4 <- m.4/m.2^(4/2)
return(n*(g.3^2/6 + (g.4-3)^2/24))
}
all.n <- c(5,10,20,100)
nb.sim <- 10000
x <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2))
par(plt=c(.1,.95,.15,.8))
all.res <- matrix(NaN,nb.sim,length(all.n))
for(i in 1:length(all.n)){
n <- all.n[i]
main.t <- paste("n=",toString(n),sep="")
x.aux <- x[,1:n]
all.res[,i] <- JB(x.aux)
hist(all.res[,i],nclass = 100,freq = FALSE,main=main.t,xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
all.n <- c(5,10,20,100)
nb.sim <- 10000
x <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2))
par(plt=c(.1,.95,.15,.8))
all.res <- matrix(NaN,nb.sim,length(all.n))
for(i in 1:length(all.n)){
n <- all.n[i]
main.t <- paste("n=",toString(n),sep="")
x.aux <- x[,1:n]
all.res[,i] <- JB(x.aux)
hist(all.res[,i],nclass = 200,freq = FALSE,main=main.t,xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
all.n <- c(5,10,20,100)
nb.sim <- 10000
x <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2))
par(plt=c(.1,.95,.15,.8))
all.res <- matrix(NaN,nb.sim,length(all.n))
for(i in 1:length(all.n)){
n <- all.n[i]
main.t <- paste("n = ",toString(n),sep="")
x.aux <- x[,1:n]
all.res[,i] <- JB(x.aux)
hist(all.res[,i],nclass = 200,freq = FALSE,main=main.t,xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
all.n <- c(5,10,20,100)
nb.sim <- 10000
x <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2));par(plt=c(.1,.95,.15,.8))
all.res <- matrix(NaN,nb.sim,length(all.n))
for(i in 1:length(all.n)){
n <- all.n[i]
all.res[,i] <- JB(x[,1:n])
hist(all.res[,i],nclass = 200,freq = FALSE,
main=paste("n = ",toString(n),sep=""),xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
all.n <- c(5,10,20,100)
nb.sim <- 10000
x <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2));par(plt=c(.1,.95,.15,.8))
for(i in 1:length(all.n)){
n <- all.n[i]
hist(JB(x[,1:n]),nclass = 200,freq = FALSE,
main=paste("n = ",toString(n),sep=""),xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
all.n <- c(5,10,20,100)
nb.sim <- 10000
y <- matrix(rnorm(nb.sim*max(all.n)),nb.sim,max(all.n))
par(mfrow=c(2,2));par(plt=c(.1,.95,.15,.8))
for(i in 1:length(all.n)){
n <- all.n[i]
hist(JB(y[,1:n]),nclass = 200,freq = FALSE,
main=paste("n = ",toString(n),sep=""),xlim=c(0,10))
xx <- seq(0,10,by=.01)
lines(xx,dchisq(xx,df = 2),col="red")
}
