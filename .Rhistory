stargazer(eq, eq, type = "text",
column.labels = c("(no HAC)", "(HAC)"),keep.stat = "n",
se = list(NULL,robust_se))
nb.lags <- 12
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
eq <- lm(dprice~FDD)
# Compute the Newey-West std errors:
var.cov.mat <- NeweyWest(eq,lag = 7, prewhite = FALSE)
robust_se <- sqrt(diag(var.cov.mat))
# Stargazer output (with and without Robust SE)
stargazer::stargazer(eq, eq, type = "text",
column.labels = c("(no HAC)", "(HAC)"),keep.stat = "n",
se = list(NULL,robust_se))
nb.lags <- 4
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
nb.lags <- 4
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
estim.armax(Y = dprice,p=1,q=1,X=FDD)
nb.lags <- 4
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
estim.armax(Y = dprice,p=1,q=0,X=FDD)
nb.lags <- 6
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
estim.armax(Y = dprice,p=1,q=0,X=FDD)
nb.lags <- 2
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
estim.armax(Y = dprice,p=1,q=0,X=FDD)
nb.lags <- 2
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
res.armax <- estim.armax(Y = dprice,p=1,q=0,X=FDD)
nb.lags <- 1
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
res.armax <- estim.armax(Y = dprice,p=1,q=0,X=FDD)
nb.lags <- 1
FDD <- FJ$fdd[(nb.lags+1):T]
names.FDD <- NULL
for(i in 1:nb.lags){
FDD <- cbind(FDD,FJ$fdd[(nb.lags+1-i):(T-i)])
names.FDD <- c(names.FDD,paste(" Lag ",toString(i),sep=""))
}
colnames(FDD) <- c(" Lag 0",names.FDD)
dprice <- 100*log(price[(k+1):T]/price[1:(T-k)])
dprice <- dprice[(length(dprice)-dim(FDD)[1]+1):length(dprice)]
res.armax <- estim.armax(Y = dprice,p=2,q=0,X=FDD)
res.armax <- estim.armax(Y = dprice,p=3,q=0,X=FDD)
plot(rnorm(10))
plot(rnorm(10))
eq$coefficients
eq$coefficients[2:13]
res.armax
names(res.armax)
IRF1 <- sim.arma(c=0,phi=c(0),theta=eq$coefficients[2:13],sigma=1,
T=nb.periods,y.0=c(0),nb.sim=1,make.IRF=1)
nb.periods <- 20
IRF1 <- sim.arma(c=0,phi=c(0),theta=eq$coefficients[2:13],sigma=1,
T=nb.periods,y.0=c(0),nb.sim=1,make.IRF=1)
IRF2 <- sim.arma(c=0,phi=res.armax$phi,theta=res.armax$theta,sigma=1,
T=nb.periods,y.0=rep(0,length(res.armax$phi)),nb.sim=1,make.IRF=1)
IRF1
plot(IRF1,type="l",lwd=2,col="red")
lines(IRF2,lwd=2,col="red",lty=2)
names(summary(eq))
summary(eq)$sigma
res.armax$sigma
IRF1 <- sim.arma(c=0,phi=c(0),theta=eq$coefficients[2:13],sigma=summary(eq)$sigma,
T=nb.periods,y.0=c(0),nb.sim=1,make.IRF=1)
IRF2 <- sim.arma(c=0,phi=res.armax$phi,theta=res.armax$theta,sigma=res.armax$sigma,
T=nb.periods,y.0=rep(0,length(res.armax$phi)),nb.sim=1,make.IRF=1)
plot(IRF1,type="l",lwd=2,col="red")
lines(IRF2,lwd=2,col="red",lty=2)
IRF1
IRF2
IRF1
nb.periods <- 20
IRF1 <- sim.arma(c=0,phi=c(0),theta=eq$coefficients[2:13],sigma=1,
T=nb.periods,y.0=c(0),nb.sim=1,make.IRF=1)
IRF2 <- sim.arma(c=0,phi=res.armax$phi,theta=res.armax$beta,sigma=1,
T=nb.periods,y.0=rep(0,length(res.armax$phi)),nb.sim=1,make.IRF=1)
plot(IRF1,type="l",lwd=2,col="red")
lines(IRF2,lwd=2,col="red",lty=2)
abline(h=0,col="grey")
Ramey <- read.csv("~/Google Drive/Teaching/UNIL/Rcode/data/MonetaryShocks/Ramey2.csv")
setwd("~/Dropbox/Teaching/MyRpackages/AEC/data-raw/Ramey")
Ramey <- read.csv("Ramey2.csv")
save(Ramey,file="../../data/Ramey.rda")
Ramey <- read.csv("Ramey2.csv")
Ramey$DATES <- as.Date(Ramey$DATES,"%m/%d/%Y")
Ramey$DATES
save(Ramey,file="../../data/Ramey.rda")
library(AEC)
T <- dim(Ramey)[1]
# Construct inflation:
Ramey$infl <- Ramey$LCPI - c(rep(NaN,3),Ramey$LCPI[1:(T-3)])
# Construct growth series:
Ramey$growth <- Ramey$LIP - c(rep(NaN,12),Ramey$LIP[1:(length(Ramey$LIP)-12)])
vec.lags <- c(9,12,18)
Matrix.of.Exog <- NULL
shocks <- Ramey$ED2_TC
for(i in 1:length(vec.lags)){
Matrix.of.Exog <- cbind(Matrix.of.Exog,
c(rep(NaN,vec.lags[i]),shocks[1:(T-vec.lags[i])]))
}
# Look for dates where data are available:
aux <- apply(Matrix.of.Exog,1,sum)
indic.good.dates <- which(!is.na(aux))
# Estimate ARMAX:
p <- 1
q <- 1
x <- estim.armax(Ramey$growth[indic.good.dates],p,q,X=Matrix.of.Exog[indic.good.dates,])
par(mfrow=c(1,1),plt=c(.15,.95,.15,.95))
plot(Ramey$DATES[indic.good.dates],100*Ramey$growth[indic.good.dates],type="l",
ylim=c(-15,10),xlab="",ylab="in percent",lwd=2)
abline(h=0,col="grey")
lines(Ramey$DATES[indic.good.dates],40*Ramey$ED3_TC[indic.good.dates],col="blue",lwd=2)
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("12-month growth rate of IP","Gertler-Karadi shocks (x 40)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black","blue"), # gives the legend lines the correct color and width
pt.bg=c(1),
pt.cex = c(1),
bg="white",
seg.len = 4
)
library(AEC)
T <- dim(Ramey)[1]
# Construct inflation:
Ramey$infl <- Ramey$LCPI - c(rep(NaN,3),Ramey$LCPI[1:(T-3)])
# Construct growth series:
Ramey$growth <- Ramey$LIP - c(rep(NaN,12),Ramey$LIP[1:(length(Ramey$LIP)-12)])
# Prepare matrix of exogenous variables:
vec.lags <- c(9,12,18)
Matrix.of.Exog <- NULL
shocks <- Ramey$ED2_TC
for(i in 1:length(vec.lags)){
Matrix.of.Exog <- cbind(Matrix.of.Exog,
c(rep(NaN,vec.lags[i]),shocks[1:(T-vec.lags[i])]))
}
# Look for dates where data are available:
aux <- apply(Matrix.of.Exog,1,sum)
indic.good.dates <- which(!is.na(aux))
# Estimate ARMAX:
p <- 1
q <- 1
x <- estim.armax(Ramey$growth[indic.good.dates],p,q,X=Matrix.of.Exog[indic.good.dates,])
par(mfrow=c(1,1),plt=c(.15,.95,.15,.95))
plot(Ramey$DATES[indic.good.dates],100*Ramey$growth[indic.good.dates],type="l",
ylim=c(-15,10),xlab="",ylab="in percent",lwd=2)
abline(h=0,col="grey")
lines(Ramey$DATES[indic.good.dates],40*Ramey$ED3_TC[indic.good.dates],col="blue",lwd=2)
#lines(Ramey$DATES[indic.good.dates],1*(Ramey$FFR[indic.good.dates]-Ramey$FFR[indic.good.dates-1]),col="red")
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("12-month growth rate of IP","Gertler-Karadi shocks (x 40)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black","blue"), # gives the legend lines the correct color and width
pt.bg=c(1),
pt.cex = c(1),
bg="white",
seg.len = 4
)
irf <- sim.arma(0,x$phi,x$beta,x$sigma,T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
irf.function <- function(THETA){
c <- THETA[1]
phi <- THETA[2:(p+1)]
if(q>0){
theta <- c(1,THETA[(1+p+1):(1+p+q)])
}else{
theta <- 1
}
sigma <- THETA[1+p+q+1]
r <- dim(Matrix.of.Exog)[2] - 1
beta <- THETA[(1+p+q+1+1):(1+p+q+1+(r+1))]
irf <- sim.arma(0,phi,beta,sigma=sd(Ramey$ED3_TC,na.rm=TRUE),T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
return(irf)
}
IRF.0 <- 100*irf.function(x$THETA)
eps <- .00000001
d.IRF <- NULL
for(i in 1:length(x$THETA)){
THETA.i <- x$THETA
THETA.i[i] <- THETA.i[i] + eps
IRF.i <- 100*irf.function(THETA.i)
d.IRF <- cbind(d.IRF,
(IRF.i - IRF.0)/eps
)
}
mat.var.cov.IRF <- d.IRF %*% x$I %*% t(d.IRF)
par(mfrow=c(1,1),plt=c(.15,.95,.2,.95))
plot(IRF.0,type="l",
ylim=c(min(IRF.0-2*sqrt(diag(mat.var.cov.IRF))),max(IRF.0+2*sqrt(diag(mat.var.cov.IRF)))),
xlab="Number of months after shock",lwd=2,ylab="in percent")
abline(h=0,col="black",lty=3,lwd=2)
lines(IRF.0+2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
lines(IRF.0-2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
complete.cases(Matrix.of.Exog)
lines(Ramey$DATES[indic.good.dates],40*Ramey$ED2_TC[indic.good.dates],col="blue",lwd=2)
library(AEC)
T <- dim(Ramey)[1]
# Construct growth series:
Ramey$growth <- Ramey$LIP - c(rep(NaN,12),Ramey$LIP[1:(length(Ramey$LIP)-12)])
# Prepare matrix of exogenous variables:
vec.lags <- c(9,12,18)
Matrix.of.Exog <- NULL
shocks <- Ramey$ED2_TC
for(i in 1:length(vec.lags)){
Matrix.of.Exog <- cbind(Matrix.of.Exog,
c(rep(NaN,vec.lags[i]),shocks[1:(T-vec.lags[i])]))
}
# Look for dates where data are available:
indic.good.dates <- complete.cases(Matrix.of.Exog)
# Estimate ARMAX:
x <- estim.armax(Ramey$growth[indic.good.dates],p=1,q=1,
X=Matrix.of.Exog[indic.good.dates,])
par(mfrow=c(1,1),plt=c(.15,.95,.15,.95))
plot(Ramey$DATES[indic.good.dates],100*Ramey$growth[indic.good.dates],type="l",
ylim=c(-15,10),xlab="",ylab="in percent",lwd=2)
abline(h=0,col="grey")
lines(Ramey$DATES[indic.good.dates],40*Ramey$ED2_TC[indic.good.dates],col="blue",lwd=2)
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("12-month growth rate of IP","Gertler-Karadi shocks (x 40)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black","blue"), # gives the legend lines the correct color and width
pt.bg=c(1),
pt.cex = c(1),
bg="white",
seg.len = 4
)
x$I
irf.function <- function(THETA){
c <- THETA[1]
phi <- THETA[2:(p+1)]
if(q>0){
theta <- c(1,THETA[(1+p+1):(1+p+q)])
}else{
theta <- 1
}
sigma <- THETA[1+p+q+1]
r <- dim(Matrix.of.Exog)[2] - 1
beta <- THETA[(1+p+q+1+1):(1+p+q+1+(r+1))]
irf <- sim.arma(0,phi,beta,sigma=sd(Ramey$ED3_TC,na.rm=TRUE),T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
return(irf)
}
IRF.0 <- 100*irf.function(x$THETA)
eps <- .00000001
d.IRF <- NULL
for(i in 1:length(x$THETA)){
THETA.i <- x$THETA
THETA.i[i] <- THETA.i[i] + eps
IRF.i <- 100*irf.function(THETA.i)
d.IRF <- cbind(d.IRF,
(IRF.i - IRF.0)/eps
)
}
mat.var.cov.IRF <- d.IRF %*% x$I %*% t(d.IRF)
par(mfrow=c(1,1),plt=c(.15,.95,.2,.95))
plot(IRF.0,type="l",
ylim=c(min(IRF.0-2*sqrt(diag(mat.var.cov.IRF))),max(IRF.0+2*sqrt(diag(mat.var.cov.IRF)))),
xlab="Number of months after shock",lwd=2,ylab="in percent")
abline(h=0,col="black",lty=3,lwd=2)
lines(IRF.0+2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
lines(IRF.0-2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
# Estimate ARMAX:
x <- estim.armax(Ramey$growth[indic.good.dates],p=1,q=1,
X=Matrix.of.Exog[indic.good.dates,])
# Compute IRF:
irf <- sim.arma(0,x$phi,x$beta,x$sigma,T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
library(AEC)
T <- dim(Ramey)[1]
# Construct growth series:
Ramey$growth <- Ramey$LIP - c(rep(NaN,12),Ramey$LIP[1:(length(Ramey$LIP)-12)])
# Prepare matrix of exogenous variables:
vec.lags <- c(9,12,18)
Matrix.of.Exog <- NULL
shocks <- Ramey$ED2_TC
for(i in 1:length(vec.lags)){
Matrix.of.Exog <- cbind(Matrix.of.Exog,
c(rep(NaN,vec.lags[i]),shocks[1:(T-vec.lags[i])]))
}
# Look for dates where data are available:
indic.good.dates <- complete.cases(Matrix.of.Exog)
par(mfrow=c(1,1),plt=c(.15,.95,.15,.95))
plot(Ramey$DATES[indic.good.dates],100*Ramey$growth[indic.good.dates],type="l",
ylim=c(-15,10),xlab="",ylab="in percent",lwd=2)
abline(h=0,col="grey")
lines(Ramey$DATES[indic.good.dates],40*Ramey$ED2_TC[indic.good.dates],col="blue",lwd=2)
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("12-month growth rate of IP","Gertler-Karadi shocks (x 40)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black","blue"), # gives the legend lines the correct color and width
pt.bg=c(1),
pt.cex = c(1),
bg="white",
seg.len = 4
)
# Estimate ARMAX:
x <- estim.armax(Ramey$growth[indic.good.dates],p=1,q=1,
X=Matrix.of.Exog[indic.good.dates,])
# Compute IRF:
irf <- sim.arma(0,x$phi,x$beta,x$sigma,T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
irf.function <- function(THETA){
c <- THETA[1]
phi <- THETA[2:(p+1)]
if(q>0){
theta <- c(1,THETA[(1+p+1):(1+p+q)])
}else{
theta <- 1
}
sigma <- THETA[1+p+q+1]
r <- dim(Matrix.of.Exog)[2] - 1
beta <- THETA[(1+p+q+1+1):(1+p+q+1+(r+1))]
irf <- sim.arma(0,phi,beta,sigma=sd(Ramey$ED3_TC,na.rm=TRUE),T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
return(irf)
}
IRF.0 <- 100*irf.function(x$THETA)
eps <- .00000001
d.IRF <- NULL
for(i in 1:length(x$THETA)){
THETA.i <- x$THETA
THETA.i[i] <- THETA.i[i] + eps
IRF.i <- 100*irf.function(THETA.i)
d.IRF <- cbind(d.IRF,
(IRF.i - IRF.0)/eps
)
}
mat.var.cov.IRF <- d.IRF %*% x$I %*% t(d.IRF)
par(mfrow=c(1,1),plt=c(.15,.95,.2,.95))
plot(IRF.0,type="l",
ylim=c(min(IRF.0-2*sqrt(diag(mat.var.cov.IRF))),max(IRF.0+2*sqrt(diag(mat.var.cov.IRF)))),
xlab="Number of months after shock",lwd=2,ylab="in percent")
abline(h=0,col="black",lty=3,lwd=2)
lines(IRF.0+2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
lines(IRF.0-2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
x$THETA
# Estimate ARMAX:
p <- 1; q <- 0
x <- estim.armax(Ramey$growth[indic.good.dates],p,q,
X=Matrix.of.Exog[indic.good.dates,])
# Compute IRF:
irf <- sim.arma(0,x$phi,x$beta,x$sigma,T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
irf.function <- function(THETA){
c <- THETA[1]
phi <- THETA[2:(p+1)]
if(q>0){
theta <- c(1,THETA[(1+p+1):(1+p+q)])
}else{
theta <- 1
}
sigma <- THETA[1+p+q+1]
r <- dim(Matrix.of.Exog)[2] - 1
beta <- THETA[(1+p+q+1+1):(1+p+q+1+(r+1))]
irf <- sim.arma(0,phi,beta,sigma=sd(Ramey$ED3_TC,na.rm=TRUE),T=60,y.0=rep(0,length(x$phi)),nb.sim=1,make.IRF=1,
X=NaN,beta=NaN)
return(irf)
}
IRF.0 <- 100*irf.function(x$THETA)
eps <- .00000001
d.IRF <- NULL
for(i in 1:length(x$THETA)){
THETA.i <- x$THETA
THETA.i[i] <- THETA.i[i] + eps
IRF.i <- 100*irf.function(THETA.i)
d.IRF <- cbind(d.IRF,
(IRF.i - IRF.0)/eps
)
}
mat.var.cov.IRF <- d.IRF %*% x$I %*% t(d.IRF)
par(mfrow=c(1,1),plt=c(.15,.95,.2,.95))
plot(IRF.0,type="l",
ylim=c(min(IRF.0-2*sqrt(diag(mat.var.cov.IRF))),max(IRF.0+2*sqrt(diag(mat.var.cov.IRF)))),
xlab="Number of months after shock",lwd=2,ylab="in percent")
abline(h=0,col="black",lty=3,lwd=2)
lines(IRF.0+2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
lines(IRF.0-2*sqrt(diag(mat.var.cov.IRF)),col="blue",lty=2,lwd=2)
??VAR.Boot
install.packages("VARsignR")
install.packages("PATH/VARsignR_0.1.2.tar.gz", repos = NULL)
install.packages("VAR.etp")
library(VAR-etp)
library(VAR.etp)
data(dat)
VAR.Boot(dat,p=2,nb=200,type="const")
data(dat)
a <- VAR.Boot(dat,p=2,nb=200,type="const")
names(a)
a$coef
names(a)
?VAR.Boot
library(vars)
b <- VAR.Boot(dat,p=2)
b$coef
a$coef
a$coef - b$coef
a$Bias
b <- VAR.Boot(dat,p=2,type="cons")
data(dat)
a <- VAR.Boot(dat,p=2,nb=200,type="const")
b <- VAR(dat,p=2,type="const")
a$coef - b$coef
a$coef
b$varresult
as.matrix(b$varresult)
a$coef + a$Bias
a$coef - a$Bias
b$varresult
library(VAR.etp)
library(vars) #standard VAR models
data(dat) # part of VAR.etp package
a <- VAR.Boot(dat,p=2,nb=200,type="const")
b <- VAR(dat,p=2)
library(VAR.etp)
library(vars) #standard VAR models
data(dat) # part of VAR.etp package
a <- VAR.Boot(dat,p=2,nb=200,type="const")
b <- VAR(dat,p=2)
(a$coef+a$Bias)[1,]
b$varresult[1]
b$varresult$inv
b$varresult$inv[2]
b$varresult$inv[1]
b$varresult$inv$coefficients
library(VAR.etp)
library(vars) #standard VAR models
data(dat) # part of VAR.etp package
a <- VAR.Boot(dat,p=2,nb=200,type="const")
b <- VAR(dat,p=2)
cbind((a$coef+a$Bias)[1,],b$varresult[1]$coefficients)
rbind((a$coef+a$Bias)[1,],b$varresult[1]$coefficients)
(a$coef+a$Bias)[1,]
b$varresult[1]$coefficients
rbind((a$coef+a$Bias)[1,],b$varresult$inv$coefficients)
library(VAR.etp)
library(vars) #standard VAR models
data(dat) # part of VAR.etp package
a <- VAR.Boot(dat,p=2,nb=200,type="const")
b <- VAR(dat,p=2)
rbind(a$coef[1,],(a$coef+a$Bias)[1,],b$varresult$inv$coefficients)
citation("dplyr")
citation("vars")
toBibtex(citation("vars"))
toBibtex(citation("stargazer"))
