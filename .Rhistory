library(AEC)
distri.1 <- list(type=c("gaussian"),name="Panel (a) Gaussian",name.4.table="Gaussian")
distri.2 <- list(type=c("mixt.gaussian"),mu=0,sigma=5,p=.03,name="Panel (b) Mixture of Gaussian",name.4.table="Mixture of Gaussian")
distri.3 <- list(type=c("student"),df=c(5),name="Panel (c) Student (df: 5)",name.4.table="Student (df: 5)")
distri.4 <- list(type=c("student"),df=c(10),name="Panel (d) Student (df: 10)",name.4.table="Student (df: 10)")
nb.sim <- 200
x.lim <- c(-5,5)
y.lim <- c(-5,5)
C <- diag(2)
Model.aux <- Model
Model.aux$C <- C
# Gaussian
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","gaussian"),df=c(NaN,NaN))
par(mfrow=c(1,3))
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," and ",eta[2*','*t]," are ",N(0,1),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
legend("topright",
c(expression(paste(eta[t],sep="")),
expression(paste(epsilon[t]," = ",B,eta[t],sep=""))),
lty=c(1,1),
col=c("black","red"),
seg.len=4,
cex=2.4,
bg="white",bty = "n")
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
par(new=TRUE)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="red",lwd=2)
# t-Student + Gaussian
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.3,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","student"),df=c(NaN,5))
Model.aux$C <- C
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," is ",N(0,1)," and ",eta[2*','*t]," is ",t(5),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
Model.aux$C <- C %*% Q
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
par(new=TRUE)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="red",lwd=2)
# t-Student + t-Student
eta.1 <- simul.distri(distri.3,nb.sim)
eta.2 <- simul.distri(distri.3,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("student","student"),df=c(5,5))
Model.aux$C <- C
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," and ",eta[2*','*t]," are ",t(5),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
Model.aux$C <- C %*% Q
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
par(new=TRUE)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="red",lwd=2)
eta.1 <- simul.distri(distri.1,nb.sim)
library(VAR.etp)
library(vars) #standard VAR models
data(dat) # part of VAR.etp package
a <- VAR.Boot(dat,p=2,nb=200,type="const")
b <- VAR(dat,p=2)
rbind(a$coef[1,],(a$coef+a$Bias)[1,],b$varresult$inv$coefficients)
library(AEC)
distri <- list(type=c("gaussian","gaussian"),df=c(4,4))
n <- length(distri$type)
nb.sim <- 30
eps <- simul.distri(distri,nb.sim)
Phi <- array(NaN,c(n,n,1))
Phi[,,1] <- matrix(c(.5,-.4,.3,.7),2,2)
p <- dim(Phi)[3]
Theta <- array(NaN,c(n,n,1))
Theta[,,1] <- -matrix(c(2,1,0,.5),2,2)
q <- dim(Theta)[3]
Mu <- rep(0,n)
C <- matrix(c(1,-1,2,1),2,2)
Model <- list(
Mu = Mu,
Phi = Phi,
Theta = Theta,
C = C,
distri = distri
)
Y0 <- rep(0,n)
eta0 <- c(1,0)
res.sim.1 <- simul.VARMA(Model,nb.sim,Y0,eta0,indic.IRF=1)
eta0 <- c(0,1)
res.sim.2 <- simul.VARMA(Model,nb.sim,Y0,eta0,indic.IRF=1)
par(plt=c(.1,.95,.25,.8))
par(mfrow=c(2,2))
plot(res.sim.1$Y[1,],las=1,
type="l",lwd=3,xlab="",ylab="",
main=expression(paste("Response of ",y[1,"*,*",t]," to a one-unit increase in ",eta[1],sep="")))
abline(h=0,col="grey",lty=3)
plot(res.sim.2$Y[1,],las=1,
type="l",lwd=3,xlab="",ylab="",
main=expression(paste("Response of ",y[1,"*,*",t]," to a one-unit increase in ",eta[2],sep="")))
abline(h=0,col="grey",lty=3)
plot(res.sim.1$Y[2,],las=1,
type="l",lwd=3,xlab="",ylab="",
main=expression(paste("Response of ",y[2,"*,*",t]," to a one-unit increase in ",eta[1],sep="")))
abline(h=0,col="grey",lty=3)
plot(res.sim.2$Y[2,],las=1,
type="l",lwd=3,xlab="",ylab="",
main=expression(paste("Response of ",y[2,"*,*",t]," to a one-unit increase in ",eta[2],sep="")))
abline(h=0,col="grey",lty=3)
knitr::include_graphics("images/Figure_A.png")
library(AEC)
nb.sim <- 12
Phi <- array(NaN,c(n,n,1))
Phi[,,1] <- matrix(c(.5,-.4,.3,.7),2,2)
p <- dim(Phi)[3]
Theta <- array(NaN,c(n,n,1))
Theta[,,1] <- 0*(-matrix(c(2,1,0,.5),2,2))
q <- dim(Theta)[3]
Mu <- rep(0,n)
C <- matrix(c(1,-1,2,1),2,2)
Model <- list(
Mu = Mu,
Phi = Phi,
Theta = Theta,
C = C,
distri = distri
)
Y0 <- rep(0,n)
eta0 <- c(1,0)
res.sim.1C <- simul.VARMA(Model,nb.sim,Y0,eta0,indic.IRF=1)
eta0 <- c(0,1)
res.sim.2C <- simul.VARMA(Model,nb.sim,Y0,eta0,indic.IRF=1)
theta.angle <- pi/3
Q <- matrix(c(cos(theta.angle),sin(theta.angle),-sin(theta.angle),cos(theta.angle)),2,2)
Model$C <- C %*% Q
Y0 <- rep(0,n)
eta0 <- c(1,0)
res.sim.1CQ <- simul.VARMA(Model,nb.sim,Y0,eta0,indic.IRF=1)
eta0 <- c(0,1)
res.sim.2CQ <- simul.VARMA(Model,nb.sim,Y0,eta0,indic.IRF=1)
par(plt=c(.1,.95,.25,.8))
par(mfrow=c(2,2))
plot(res.sim.1C$Y[1,],las=1,
ylim=c(-1.5,3),
type="b",lwd=2,xlab="",ylab="",
main=expression(paste("Response of ",y[1,"*,*",t]," to a one-unit increase in ",eta[1],sep="")))
lines(res.sim.1CQ$Y[1,],col="red",type="b",lwd=2,pch=0)
abline(h=0,col="grey",lty=3)
legend("topright",
c(expression(paste(epsilon[t]," = ",B,eta[t],sep="")),
expression(paste(epsilon[t]," = ",BQ,eta[t],sep=""))),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(3,3), # line width
pch=c(21,22),
pt.bg = "white",
col=c("black","red"),
seg.len=4,
cex=1.3,bg="white",title="Model:")
plot(res.sim.2C$Y[1,],las=1,
ylim=c(-1.5,3),
type="b",lwd=2,xlab="",ylab="",
main=expression(paste("Response of ",y[1,"*,*",t]," to a one-unit increase in ",eta[2],sep="")))
lines(res.sim.2CQ$Y[1,],col="red",type="b",lwd=2,pch=0)
abline(h=0,col="grey",lty=3)
plot(res.sim.1C$Y[2,],las=1,
ylim=c(-1.5,2),
type="b",lwd=2,xlab="",ylab="",
main=expression(paste("Response of ",y[2,"*,*",t]," to a one-unit increase in ",eta[1],sep="")))
lines(res.sim.1CQ$Y[2,],col="red",type="b",lwd=2,pch=0)
abline(h=0,col="grey",lty=3)
plot(res.sim.2C$Y[2,],las=1,
ylim=c(-1.5,2),
type="b",lwd=2,xlab="",ylab="",
main=expression(paste("Response of ",y[2,"*,*",t]," to a one-unit increase in ",eta[2],sep="")))
lines(res.sim.2CQ$Y[2,],col="red",type="b",lwd=2,pch=0)
abline(h=0,col="grey",lty=3)
knitr::include_graphics("images/Figure_C.png")
knitr::include_graphics("images/Figure_D.png")
library(AEC)
distri.1 <- list(type=c("gaussian"),name="Panel (a) Gaussian",name.4.table="Gaussian")
distri.2 <- list(type=c("mixt.gaussian"),mu=0,sigma=5,p=.03,name="Panel (b) Mixture of Gaussian",name.4.table="Mixture of Gaussian")
distri.3 <- list(type=c("student"),df=c(5),name="Panel (c) Student (df: 5)",name.4.table="Student (df: 5)")
distri.4 <- list(type=c("student"),df=c(10),name="Panel (d) Student (df: 10)",name.4.table="Student (df: 10)")
nb.sim <- 200
x.lim <- c(-5,5)
y.lim <- c(-5,5)
C <- diag(2)
Model.aux <- Model
Model.aux$C <- C
# Gaussian
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","gaussian"),df=c(NaN,NaN))
par(mfrow=c(1,3))
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," and ",eta[2*','*t]," are ",N(0,1),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
legend("topright",
c(expression(paste(eta[t],sep="")),
expression(paste(epsilon[t]," = ",B,eta[t],sep=""))),
lty=c(1,1),
col=c("black","red"),
seg.len=4,
cex=2.4,
bg="white",bty = "n")
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
par(new=TRUE)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="red",lwd=2)
# t-Student + Gaussian
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.3,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","student"),df=c(NaN,5))
Model.aux$C <- C
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," is ",N(0,1)," and ",eta[2*','*t]," is ",t(5),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
Model.aux$C <- C %*% Q
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
par(new=TRUE)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="red",lwd=2)
# t-Student + t-Student
eta.1 <- simul.distri(distri.3,nb.sim)
eta.2 <- simul.distri(distri.3,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("student","student"),df=c(5,5))
Model.aux$C <- C
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," and ",eta[2*','*t]," are ",t(5),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
Model.aux$C <- C %*% Q
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
par(new=TRUE)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="red",lwd=2)
nb.points
nb.points
z <- matrix(exp(g(eps,Model.aux)),sqrt(nb.sim),sqrt(nb.sim))
nb.sim <- 400
x.lim <- c(-5,5)
y.lim <- c(-5,5)
C <- diag(2)
Model.aux <- Model
Model.aux$C <- C
# Gaussian
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","gaussian"),df=c(NaN,NaN))
par(mfrow=c(1,3))
z <- matrix(exp(g(eps,Model.aux)),sqrt(nb.sim),sqrt(nb.sim))
sqrt(nb.sim)
length(exp(g(eps,Model.aux)))
eps
nb.sim <- 400
x.lim <- c(-5,5)
y.lim <- c(-5,5)
C <- diag(2)
Model.aux <- Model
Model.aux$C <- C
# Gaussian
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","gaussian"),df=c(NaN,NaN))
par(mfrow=c(1,3))
z <- matrix(exp(g(cbind(eta.1,eta.2),Model.aux)),sqrt(nb.sim),sqrt(nb.sim))
library(AEC)
distri.1 <- list(type=c("gaussian"),name="Panel (a) Gaussian",name.4.table="Gaussian")
distri.2 <- list(type=c("mixt.gaussian"),mu=0,sigma=5,p=.03,name="Panel (b) Mixture of Gaussian",name.4.table="Mixture of Gaussian")
distri.3 <- list(type=c("student"),df=c(5),name="Panel (c) Student (df: 5)",name.4.table="Student (df: 5)")
distri.4 <- list(type=c("student"),df=c(10),name="Panel (d) Student (df: 10)",name.4.table="Student (df: 10)")
nb.sim <- 400
x.lim <- c(-5,5)
y.lim <- c(-5,5)
C <- diag(2)
Model.aux <- Model
Model.aux$C <- C
# Gaussian
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","gaussian"),df=c(NaN,NaN))
par(mfrow=c(1,3))
z <- matrix(exp(g(cbind(eta.1,eta.2),Model.aux)),sqrt(nb.sim),sqrt(nb.sim))
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," and ",eta[2*','*t]," are ",N(0,1),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
dim(z)
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
etq.1
eta.1
x.points
z
y.points
?contour
exp(g(cbind(eta.1,eta.2),Model.aux))
plot(x.points)
knitr::include_graphics("images/Figure_E.png")
source("~/My Drive/Work/Admin UNIL/Tenure UNIL/Cours1Mai/Rcodes/make.chart.illus_BinstaeadofC.R")
setwd("~/Dropbox/Teaching/GraduateInstitute/Cours_Bookdown")
x.lim <- c(-5,5)
y.lim <- c(-5,5)
C <- diag(2)
Model.aux <- Model
Model.aux$C <- C
par(plt=c(.15,.9,.15,.85))
eta.1 <- simul.distri(distri.1,nb.sim)
eta.2 <- simul.distri(distri.1,nb.sim)
epsilon.C <- cbind(eta.1,eta.2) %*% t(C)
epsilon.CQ <- cbind(eta.1,eta.2) %*% t(C %*% Q)
Model.aux$distri <- list(type=c("gaussian","gaussian"),df=c(NaN,NaN))
par(mfrow=c(1,3))
z <- matrix(exp(g(eps,Model.aux)),nb.points,nb.points)
max.z <- max(z)
levels <- c(.002,.02,.3,.6,.9)*max.z
contour(x.points,y.points,z,levels=levels,xlim=x.lim,ylim=y.lim,col="black",lwd=2,
cex.main=2.4,
main=expression(paste(eta[1*','*t]," and ",eta[2*','*t]," are ",N(0,1),sep="")),
xlab=expression(epsilon[1*','*t]),
ylab=expression(epsilon[2*','*t]),
cex.lab=2.4)
eq_all$coefficients
library(AEC)
dummies <- as.matrix(parapluie[,4:14])
eq_all <- lm(parapluie~precip+dummies,data=parapluie)
eq_all$coefficients
deseas_parapluie <- lm(parapluie~dummies,data=parapluie)$residuals
deseas_precip    <- lm(precip~dummies,data=parapluie)$residuals
eq_frac <- lm(deseas_parapluie~deseas_precip)
eq_frac$coefficients
library(AEC)
dummies <- as.matrix(parapluie[,4:14])
eq_all <- lm(parapluie~precip+dummies,data=parapluie)
deseas_parapluie <- lm(parapluie~dummies,data=parapluie)$residuals
deseas_precip    <- lm(precip~dummies,data=parapluie)$residuals
eq_frac <- lm(deseas_parapluie~deseas_precip)
rbind(eq_all$coefficients,
c(eq_frac$coefficients,rep(NaN,11)))
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female,data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
summary8eq
summary(eq)
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + ownkid19,data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + ownkid19 + ownkid19*age19,data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + ownkid19 + ownkid19*I(age19<50),data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + ownkid19 + ownkid19*I(age19<40),data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + ownkid19 + female*ownkid19*I(age19<40),data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + female*ownkid19*I(age19<40),data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + I(female*ownkid19*age19<40),data=shp)
lmtest::coeftest(eq,vcov. = sandwich)
lmtest::coeftest(eq,vcov. = vcovHC)
X <- cbind(1,shp$edyear19,shp$age19,shp$age19^2,shp$female)
solve(t(X) %*% X) %*% t(X) %*% diag(eq$residuals^2) %*% X %*% solve(t(X) %*% X)
vcovHC(eq,type="HC0")
sandwich(eq)
vcovHC(eq,type="HC1")
library(AEC)
library(sandwich)
shp$income <- shp$i19ptotn/1000
shp$female <- 1*(shp$sex19==2)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + I(female*ownkid19*age19<40),data=shp)
summary(eq)
eq <- lm(income ~ edyear19 + age19 + I(age19^2) + female + I(female*ownkid19*(age19<40)),data=shp)
summary(eq)
