Y <- c(Y,y)
}
plot(Y,type="l",xlab="time t",ylab=expression(y[t]))
true_values <- c(mu,log(rho/(1-rho)),log(sigma))
means_prior <- c(1,0,0) # as if we did not know the true values
stdv_prior <- rep(2,3)
resultMCMC <- MCMC(Y,means_prior,stdv_prior,a=.45,N=20000)
58+336+197
install.packages("wooldridge")
290*.03
290*.03/12
290*.026/12
library(wooldridge)
data(injury)
names(injury)
dim(injury)
sum(injury$ky)
sum(injury$mi)
injury$ky
data(injury)
injury <- subset(injury,ki==1)
injury <- subset(injury,ky==1)
names(injury)
eq <- lm(log(duration) ~ afchnge + highearn + afchnge*highearn,data=injury)
eq <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn,data=injury)
summary(eq)
library(wooldridge)
data(injury)
library(wooldridge)
data(injury)
injury <- subset(injury,ky==1)
names(injury)
eq <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn,data=injury)
summary(eq)
?injury
library(wooldridge)
library(wooldridge)
data(injury)
injury <- subset(injury,ky==1)
eq1 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn,data=injury)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + log(prewage)*highearn + male + married + log(age) + log(totmed) + hosp + indust + injtype,data=injury)
injury$indust
class(injury$indust)
injury$injtype
injury$indust <- as.factor(injury$indust)
injury$injtype <- as.factor(injury$injtype)
#names(injury)
eq1 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn,data=injury)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + log(prewage)*highearn + male + married + log(age) + log(totmed) + hosp + indust + injtype,data=injury)
injury$indust
levels(injury$indust)
levels(injury$injtype)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + log(prewage)*highearn + male + married + log(age) + log(totmed) + hosp,data=injury)
injury$hosp
injury$totmed
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + log(prewage)*highearn + male + married,data=injury)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + log(prewage)*highearn + male + married + log(age),data=injury)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + log(prewage)*highearn + male + married + log(age) + log(totmed),data=injury)
injury(tot)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + lprewage + lprewage*highearn + male + married + lage + ltotmed + hosp + indust + injtype,data=injury)
stargazer::stargazer(eq1,eq2,type="text")
stargazer::stargazer(eq1,eq2,type="text",
order=1:12)
stargazer::stargazer(eq1,eq2,type="text",
order=c(10,1:9,11:12))
stargazer::stargazer(eq1,eq2,type="text",
order=c(1:2,18,3:17,19:20))
data(injury)
injury <- subset(injury,ky==1)
injury$indust <- as.factor(injury$indust)
injury$injtype <- as.factor(injury$injtype)
eq1 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn,data=injury)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + lprewage*highearn + male + married + lage + ltotmed + hosp + indust + injtype,data=injury)
stargazer::stargazer(eq1,eq2,type="text")
stargazer::stargazer(eq1,eq2,type="text",
order = c(1,2,18,3:17,19,20))
stargazer::stargazer(eq1,eq2,type="text",
order = c(1,2,18,3:17,19,20))
eq1 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn,data=injury)
eq2 <- lm(log(durat) ~ afchnge + highearn + afchnge*highearn + log(prewage) + lprewage*highearn + male + married + lage + ltotmed + hosp + indust + injtype,data=injury)
stargazer::stargazer(eq1,eq2,type="text",
order = c(1,2,18,3:17,19,20))
library(AEC)
credit$loan_status
levels(credit$loan_status)
levels(as.factor(credit$loan_status))
library(AEC)
credit$Default.binary <- 0
credit$Default.binary[loanData$loan_status == "Charged Off"] <- 1
library(AEC)
credit$Default.binary <- 0
credit$Default.binary[credit$loan_status == "Charged Off"] <- 1
credit$Default.binary[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
plot(as.factor(credit$Default)~credit$delinq_2yrs)
credit$delinq_2yrs
table(as.factor(loanData$Default))
credit8credit$delinq_2yrs
table(credit$delinq_2yrs)
plot(as.factor(credit$Default)~credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc))
plot(as.factor(credit$Default)~log(credit$annual_inc),yleve=c(1,0))
plot(as.factor(credit$Default)~log(credit$annual_inc),ylevel=c(1,0))
plot(as.factor(credit$Default)~log(credit$annual_inc),ylevels=c(1,0))
plot(as.factor(credit$Default)~log(credit$annual_inc),ylevels=2:1)
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
names(credit)
credit$amt.2.income <- log(credit$installment/credit$annual_inc)
plot(credit$installment,credit$loan_amnt)
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt.2.income <- log(credit$loan_amnt/credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
lending.probit <- glm(Default ~ amt.2.income + term + renter + owner + delinq_2yrs+
issue_Y,
data=loanData,family=binomial(link="probit"))
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt.2.income <- log(credit$loan_amnt/credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
lending.probit <- glm(Default ~ amt.2.income + term + renter + owner + delinq_2yrs+
issue_Y,
data=credit,family=binomial(link="probit"))
credit$Default
levels(as.factor(credit$Default))
credit$amt.2.income
levels(as.factor(credit$term))
lending.probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs+
issue_Y,
data=credit,family=binomial(link="probit"))
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt.2.income <- log(credit$loan_amnt/credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs+
issue_Y,
data=credit,family=binomial(link="probit"))
summary(eq_probit)
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs+
issue_Y + log(annual_inc),
data=credit,family=binomial(link="probit"))
summary(eq_probit)
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs+
issue_Y + log(annual_inc)+ + log(annual_inc)^2,
data=credit,family=binomial(link="probit"))
summary(eq_probit)
levels8as.fac
levels(as.factor(credit$issue_Y))
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs + log(annual_inc)+ + log(annual_inc)^2,
data=credit,family=binomial(link="probit"))
summary(eq_probit)
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs + log(annual_inc)+ log(annual_inc)^2,
data=credit,family=binomial(link="probit"))
summary(eq_probit)
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
summary(eq_probit)
credit$renter
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt.2.income <- log(credit$loan_amnt/credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
eq_probit <- glm(Default ~ amt.2.income + renter + owner + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
summary(eq_probit)
credit$renter
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt2income <- log(credit$loan_amnt/credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
eq_probit <- glm(Default ~ amt2income + owner + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
summary(eq_probit)
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt2income <- log(credit$loan_amnt/credit$annual_inc)
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
eq_probit <- glm(Default ~ log(loan_amnt) + amt2income + owner + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
summary(eq_probit)
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt2income <- credit$loan_amnt/credit$annual_inc
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
eq_probit <- glm(Default ~ log(loan_amnt) + amt2income + owner + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
summary(eq_probit)
coefficients(eq_probit)
likelihood(eq_probit)
logLik(eq_probit)
logLik(eq_probit)+1
library(AEC)
credit$Default <- 0
credit$Default[credit$loan_status == "Charged Off"] <- 1
credit$Default[credit$loan_status == "Does not meet the credit policy. Status:Charged Off"] <- 1
credit$amt2income <- credit$loan_amnt/credit$annual_inc
plot(as.factor(credit$Default)~log(credit$annual_inc),
ylevels=2:1,ylab="Default status",xlab="log(annual income)")
eq_probit <- glm(Default ~ log(loan_amnt) + amt2income + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
stargazer::stargazer(eq_probit,type="text")
logL <- logLik(eq_probit)
eq0 <- glm(Default ~ 1,data=credit,family=binomial(link="probit"))
logL0 <- logLik(eq0)
1 - logL/logL0 # pseudo R2
names(credit)
credit$grade
fav <- mean(dnorm(predict(eq2,type="link")))
eq2
predict(eq2,type="link")
mean(dnorm(predict(eq2)),na.rm=TRUE)*eq2$coefficients
new_credit <- credit
new_credit <- credit
new_credit$annual_inc <- 1.01 * new_credit$annual_inc # increase of income by 1%
new_predict_eq2  <- predict(eq2, new_credit, type = "probs")
new_credit <- credit
new_credit$annual_inc <- 1.01 * new_credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "probs")
eq0 <- glm(Default ~ 1,data=credit,family=binomial(link="probit"))
eq1 <- glm(Default ~ log(loan_amnt) + amt2income + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
eq2 <- glm(Default ~ grade + log(loan_amnt) + amt2income + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
new_credit <- credit
new_credit$annual_inc <- 1.01 * new_credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "probs")
predict(eq2, newdata = credit, type = "probs")
predict(eq2, newdata = credit, type = "link")
predict(eq2, newdata = credit, type = "response")
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
new_predict_eq2  <- predict(eq2, neadata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
new_credit <- credit
new_credit$annual_inc <- 1.01 * redit$annual_inc # increase of income by 1%
new_credit <- credit
new_credit$annual_inc <- 1.01 * credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
new_predict_eq2  <- predict(eq2, neadata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
new_credit <- credit
new_credit$annual_inc <- 1.1 * credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
new_predict_eq2  <- predict(eq2, neadata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
new_predict_eq2 - bas_predict_eq2
new_credit$annual_inc <- 1.01 * credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
new_predict_eq2  <- predict(eq2, newdata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
new_credit <- credit
new_credit$annual_inc <- 1.1 * credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
new_predict_eq2  <- predict(eq2, newdata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
new_credit <- credit
new_credit$delinq_2yrs <- credit$delinq_2yrs + 1 # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
new_predict_eq2  <- predict(eq2, newdata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
plot(density(predict(eq2, newdata = credit, type = "response")))
eq2$fitted.values
plot(density(predict(eq2, newdata = credit)))
pnorm(predict(eq2, newdata = credit))
pnorm(predict(eq2, newdata = credit)) - predict(eq2, newdata = credit, type = "response")
mean(abs(pnorm(predict(eq2, newdata = credit)) - predict(eq2, newdata = credit, type = "response")))
table(credit$Default)
mean(bas_predict_eq2)
plot(density(bas_predict_eq2))
new_credit <- credit
new_credit$annual_inc <- 1.01 * new_credit$annual_inc # increase of income by 1%
bas_predict_eq2  <- predict(eq2, newdata = credit, type = "response")
# This is equivalent to pnorm(predict(eq2, newdata = credit))
new_predict_eq2  <- predict(eq2, neadata = new_credit, type = "response")
mean(new_predict_eq2 - bas_predict_eq2)
eq0 <- glm(Default ~ 1,data=credit,family=binomial(link="probit"))
eq1 <- glm(Default ~ log(loan_amnt) + amt2income + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
eq2 <- glm(Default ~ grade + log(loan_amnt) + amt2income + delinq_2yrs + log(annual_inc)+ I(log(annual_inc)^2),
data=credit,family=binomial(link="probit"))
logL0 <- logLik(eq0)
logL1 <- logLik(eq1)
logL2 <- logLik(eq2)
1 - logL1/logL0 # pseudo R2
1 - logL2/logL0 # pseudo R2
stargazer::stargazer(eq0,eq1,eq2,type="text")
LRstat <- 2*(logL2 - logL1)
pchisq(LRstat,df=6)
LRstat
c(pchisq(LRstat,df=6))
c(pchisq(5,df=6))
c(pchisq(30,df=6))
eq1restr <- glm(Default ~ log(loan_amnt) + amt2income + delinq_2yrs,
data=credit,family=binomial(link="probit"))
LRstat <- 2*(logL1 - logLik(eq1restr))
c(pchisq(LRstat,df=6))
c(pchisq(LRstat,df=2))
pvalue <- 1 - c(pchisq(LRstat,df=2))
Fishing <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/Ecdat/Fishing.csv")
stargazer(Fishing)
Fishing <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/Ecdat/Fishing.csv")
stargazer::stargazer(Fishing)
data.reduced <- subset(Fishing,mode %in% c("charter","pier"))
data.reduced$lnrelp <- log(data.reduced$pcharter/data.reduced$ppier)
data.reduced$y <- 1*(data.reduced$mode=="charter")
# check first line of Table 14.1:
price.charter.y0 <- mean(data.reduced$pcharter[data.reduced$y==0])
price.charter.y1 <- mean(data.reduced$pcharter[data.reduced$y==1])
price.charter    <- mean(data.reduced$pcharter)
# Run probit regression:
reg.probit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="probit"))
summary(reg.probit)
# Run Logit regression:
reg.logit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="logit"))
summary(reg.logit)
# Run OLS regression:
reg.OLS <- lm(y ~ lnrelp,
data=data.reduced)
summary(reg.OLS)
# Compute McFadden pseudo-R2
reg.probit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="probit"))
pseudoR2.probit <- 1- logLik(reg.probit)/logLik(reg.probit0)
reg.logit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="logit"))
pseudoR2.logit <- 1- logLik(reg.logit)/logLik(reg.logit0)
# Replicates Table 14.2 of Cameron and Trivedi:
stargazer::stargazer(reg.logit, reg.probit, reg.OLS)
install.packages("Ecdat")
library(Ecdat)
data(Fishing)
stargazer::stargazer(Fishing)
library(Ecdat)
data(Fishing)
stargazer::stargazer(Fishing,type="text")
data.reduced <- subset(Fishing,mode %in% c("charter","pier"))
data.reduced$lnrelp <- log(data.reduced$pcharter/data.reduced$ppier)
data.reduced$y <- 1*(data.reduced$mode=="charter")
# check first line of Table 14.1:
price.charter.y0 <- mean(data.reduced$pcharter[data.reduced$y==0])
price.charter.y1 <- mean(data.reduced$pcharter[data.reduced$y==1])
price.charter    <- mean(data.reduced$pcharter)
# Run probit regression:
reg.probit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="probit"))
summary(reg.probit)
# Run Logit regression:
reg.logit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="logit"))
summary(reg.logit)
# Run OLS regression:
reg.OLS <- lm(y ~ lnrelp,
data=data.reduced)
summary(reg.OLS)
# Compute McFadden pseudo-R2
reg.probit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="probit"))
pseudoR2.probit <- 1- logLik(reg.probit)/logLik(reg.probit0)
reg.logit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="logit"))
pseudoR2.logit <- 1- logLik(reg.logit)/logLik(reg.logit0)
# Replicates Table 14.2 of Cameron and Trivedi:
stargazer::stargazer(reg.logit, reg.probit, reg.OLS)
library(Ecdat)
data(Fishing)
stargazer::stargazer(Fishing,type="text")
data.reduced <- subset(Fishing,mode %in% c("charter","pier"))
data.reduced$lnrelp <- log(data.reduced$pcharter/data.reduced$ppier)
data.reduced$y <- 1*(data.reduced$mode=="charter")
# check first line of Table 14.1:
price.charter.y0 <- mean(data.reduced$pcharter[data.reduced$y==0])
price.charter.y1 <- mean(data.reduced$pcharter[data.reduced$y==1])
price.charter    <- mean(data.reduced$pcharter)
# Run probit regression:
reg.probit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="probit"))
summary(reg.probit)
# Run Logit regression:
reg.logit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="logit"))
summary(reg.logit)
# Run OLS regression:
reg.OLS <- lm(y ~ lnrelp,
data=data.reduced)
summary(reg.OLS)
# Compute McFadden pseudo-R2
reg.probit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="probit"))
pseudoR2.probit <- 1- logLik(reg.probit)/logLik(reg.probit0)
reg.logit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="logit"))
pseudoR2.logit <- 1- logLik(reg.logit)/logLik(reg.logit0)
# Replicates Table 14.2 of Cameron and Trivedi:
stargazer::stargazer(reg.logit, reg.probit, reg.OLS,tyep="text")
library(Ecdat)
data(Fishing)
stargazer::stargazer(Fishing,type="text")
data.reduced <- subset(Fishing,mode %in% c("charter","pier"))
data.reduced$lnrelp <- log(data.reduced$pcharter/data.reduced$ppier)
data.reduced$y <- 1*(data.reduced$mode=="charter")
# check first line of Table 14.1:
price.charter.y0 <- mean(data.reduced$pcharter[data.reduced$y==0])
price.charter.y1 <- mean(data.reduced$pcharter[data.reduced$y==1])
price.charter    <- mean(data.reduced$pcharter)
# Run probit regression:
reg.probit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="probit"))
summary(reg.probit)
# Run Logit regression:
reg.logit <- glm(y ~ lnrelp,
data=data.reduced,
family=binomial(link="logit"))
summary(reg.logit)
# Run OLS regression:
reg.OLS <- lm(y ~ lnrelp,
data=data.reduced)
summary(reg.OLS)
# Compute McFadden pseudo-R2
reg.probit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="probit"))
pseudoR2.probit <- 1- logLik(reg.probit)/logLik(reg.probit0)
reg.logit0 <- glm(y ~ 1,
data=data.reduced,
family=binomial(link="logit"))
pseudoR2.logit <- 1- logLik(reg.logit)/logLik(reg.logit0)
# Replicates Table 14.2 of Cameron and Trivedi:
stargazer::stargazer(reg.logit, reg.probit, reg.OLS,
type="text")
?Fishing
price.charter.y0 <- mean(data.reduced$pcharter[data.reduced$y==0])
price.charter.y1 <- mean(data.reduced$pcharter[data.reduced$y==1])
price.charter    <- mean(data.reduced$pcharter)
price.charter
?roc
??roc
install.packages("pROC")
Fishing$y
data.reduced$y
reg.probit
roc(data.reduced$y, reg.probit, percent=T,
boot.n=1000, ci.alpha=0.9, stratified=T, plot=TRUE, grid=TRUE,
show.thres=TRUE, legacy.axes = TRUE, reuse.auc = TRUE,
print.auc = TRUE, print.thres.col = "blue", ci=TRUE,
ci.type="bars", print.thres.cex = 0.7, col = 'red',
main = paste("ROC curve using","(N = ",nrow(test),")") )
library(pROC)
roc(data.reduced$y, reg.probit, percent=T,
boot.n=1000, ci.alpha=0.9, stratified=T, plot=TRUE, grid=TRUE,
show.thres=TRUE, legacy.axes = TRUE, reuse.auc = TRUE,
print.auc = TRUE, print.thres.col = "blue", ci=TRUE,
ci.type="bars", print.thres.cex = 0.7, col = 'red',
main = paste("ROC curve using","(N = ",nrow(test),")") )
roc(data.reduced$y, reg.probit, percent=T,
boot.n=1000, ci.alpha=0.9, stratified=T, plot=TRUE, grid=TRUE,
show.thres=TRUE, legacy.axes = TRUE, reuse.auc = TRUE,
print.auc = TRUE, print.thres.col = "blue", ci=TRUE,
ci.type="bars", print.thres.cex = 0.7, col = 'red',
main = paste("ROC curve using","(N = ",nrow(data.reduced),")") )
predict_model <- predict.glm(reg.probit,type = "response")
roc(data.reduced$y, predict_model, percent=T,
boot.n=1000, ci.alpha=0.9, stratified=T, plot=TRUE, grid=TRUE,
show.thres=TRUE, legacy.axes = TRUE, reuse.auc = TRUE,
print.auc = TRUE, print.thres.col = "blue", ci=TRUE,
ci.type="bars", print.thres.cex = 0.7, col = 'red',
main = paste("ROC curve using","(N = ",nrow(data.reduced),")") )
library(AEC)
setwd("~/Dropbox/Teaching/MyRpackages/AEC/data-raw/SHP")
source("~/Dropbox/Teaching/MyRpackages/AEC/data-raw/SHP/SHP.R")
